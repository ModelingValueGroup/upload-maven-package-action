name: test
on:
  push
jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: "checkout"
        uses: actions/checkout@v1

      - name: "attach head"
        run: git checkout "${GITHUB_REF#refs/heads/}"

      - name: "setup JDK"
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: "get buildTools"
        uses: ModelingValueGroup/buildTools@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "(re)generate some files"
        run:  |
          . <(java -jar buildTools.jar)
          correctEols
          correctHeaders header

      - name: "test"
        run: |
          set -euo pipefail
          . functions.sh  1>&2
          echo "#dry" > dry.pack
          out="$(DRY=echo main \
            "${{ secrets.GITHUB_TOKEN }}" \
            "dry.pack" \
            "mygroup:myartifact:0.0:pack" \
            "")"
          exp="mvn -B -s settings.xml deploy:deploy-file -DgroupId=mygroup -DartifactId=myartifact -Dversion=0.0 -Dpackaging=pack -DrepositoryId=github -Dfile=dry.pack -DpomFile= -Durl=https://maven.pkg.github.com/ModelingValueGroup/upload-maven-package-action"
          if [[ "$out" != "$exp" ]]; then
            echo "::error::test failed"
            echo "::error::    expected: $exp"
            echo "::error::    output  : $out"
            exit 44
          fi
          echo "ok"

      - name: "push changes back to github"
        run:  |
          git ls-files --deleted --modified --others --exclude-standard || :
          if [[ "$(git ls-files --deleted --modified --others --exclude-standard)" ]]; then
            echo "changes need to be pushed back to github"

            echo "::group::git commit and push"
              git config user.email "automation@modelingvalue.com"
              git config user.name "$GITHUB_ACTOR"
              git add .
              git commit -m "adjusted files [by github actions]"
              git push "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
            echo "::endgroup::"

          else
            echo "no changes need to be pushed back to github"
          fi
